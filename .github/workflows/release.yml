# .github/workflows/release.yml
name: Build and Release Desktop App

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual triggering
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

# Add permissions for creating releases
permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        cd desktop-app
        # Install PyAudio with pre-compiled wheel (should work on Windows)
        pip install --only-binary=all pyaudio
        pip install -r requirements.txt
    
    - name: Build executable
      run: |
        cd desktop-app
        
        # Check if script exists
        if (Test-Path "deepfake_monitor.py") {
          Write-Host "‚úÖ deepfake_monitor.py found"
        } else {
          Write-Host "‚ùå deepfake_monitor.py missing"
          exit 1
        }
        
        # Create basic icon if none exists
        if (-not (Test-Path "lion_icon.ico") -and -not (Test-Path "lion_icon.png")) {
          Write-Host "Creating basic icon..."
          python -c "from PIL import Image; img=Image.new('RGB',(64,64),'#FFD700'); img.save('lion_icon.ico'); img.save('lion_icon.png')"
        }
        
        # Build with PyInstaller (use ico for Windows)
        if (Test-Path "lion_icon.ico") {
          pyinstaller --onefile --windowed --icon="lion_icon.ico" --name="Lion-AI-Detection" deepfake_monitor.py
        } else {
          pyinstaller --onefile --windowed --name="Lion-AI-Detection" deepfake_monitor.py
        }
        
        # Copy to root for easy access
        if (Test-Path "dist\Lion-AI-Detection.exe") {
          Copy-Item "dist\Lion-AI-Detection.exe" "..\Lion-AI-Detection.exe"
          Write-Host "‚úÖ Executable copied to root"
        } else {
          Write-Host "‚ùå Build failed - executable not found"
          exit 1
        }
      shell: pwsh
    
    - name: Test executable
      run: |
        # Quick test that the exe was created and can start
        if (Test-Path "Lion-AI-Detection.exe") {
          Write-Host "‚úÖ Executable created successfully"
          Get-Item "Lion-AI-Detection.exe" | Select-Object Name, Length, LastWriteTime
        } else {
          Write-Host "‚ùå Executable not found"
          exit 1
        }
      shell: pwsh
    
    - name: Get version
      id: get_version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
      shell: bash
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        name: Lion AI Detection ${{ steps.get_version.outputs.VERSION }}
        body: |
          # ü¶Å Lion AI Detection - Desktop Guardian ${{ steps.get_version.outputs.VERSION }}
          
          **Real-time AI voice detection for your computer**
          
          ## üì• Quick Start
          1. **Download** `Lion-AI-Detection.exe` below
          2. **Run** the executable (Windows may show security warning - click "Keep")
          3. **Follow** the first-time setup dialog for audio configuration
          4. **Right-click** system tray icon to start monitoring
          
          ## üé§ Audio Setup (Important!)
          - **Enable "Stereo Mix"** in Windows Sound settings for system audio
          - **Or use microphone** for call/meeting detection
          - **See in-app help** menu for detailed setup instructions
          
          ## ‚ö° Features This Release
          - Real-time deepfake detection (under 2 seconds)
          - System tray background operation
          - Smart alert system (reduces false alarms)
          - Audio setup help and first-time wizard
          - Auto-start with Windows option
          - Detection history and logging
          
          ## üîß System Requirements
          - Windows 10/11 (64-bit)
          - Microphone or system audio capability
          - Internet connection for AI analysis
          - ~50MB disk space
          
          ## üõ°Ô∏è Privacy & Security
          - **No data stored** - all processing is real-time
          - **Secure API** - uses Hugging Face infrastructure
          - **No registration** required
          - **Audio never saved** to disk
          
          ## üêõ Troubleshooting
          - **Chrome download warning**: Normal for new apps - click "Keep"
          - **No system audio**: Enable "Stereo Mix" in Windows Sound settings
          - **High CPU usage**: Adjust detection sensitivity in settings
          - **False alarms**: Lower sensitivity or enable smart filtering
          
          ---
          **üÜì Free during beta | $2.99/month after public launch**
          
          **Questions?** Check the in-app help or create an issue on GitHub.
        draft: false
        prerelease: false
        files: |
          Lion-AI-Detection.exe